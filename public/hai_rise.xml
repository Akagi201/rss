<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <atom:link href="https://nitter.freedit.eu/hai_rise/rss" rel="self" type="application/rss+xml" />
    <title>Hai | RISE | 🍚⛓🦀 / @hai_rise</title>
    <link>https://nitter.freedit.eu/hai_rise</link>
    <description>Twitter feed for: @hai_rise. Generated by nitter.freedit.eu
</description>
    <language>en-us</language>
    <ttl>40</ttl>
    <image>
      <title>Hai | RISE | 🍚⛓🦀 / @hai_rise</title>
      <link>https://nitter.freedit.eu/hai_rise</link>
      <url>https://nitter.freedit.eu/pic/pbs.twimg.com%2Fprofile_images%2F1725444980507086848%2FMlqD6Er8_400x400.jpg</url>
      <width>128</width>
      <height>128</height>
    </image>
      <item>
        <title>RT by @hai_rise: Our testnet will break. If it doesn’t, we didn’t push hard enough.</title>
        <dc:creator>@sam_battenally</dc:creator>
        <description><![CDATA[<p>Our testnet will break. If it doesn’t, we didn’t push hard enough.</p>]]></description>
        <pubDate>Sat, 15 Feb 2025 06:45:44 GMT</pubDate>
        <guid>https://nitter.freedit.eu/sam_battenally/status/1890653705696874971#m</guid>
        <link>https://nitter.freedit.eu/sam_battenally/status/1890653705696874971#m</link>
      </item>
      <item>
        <title>RT by @hai_rise: Checkout our latest article on low latency real-time preconfirmations

TDLR; 
🔹Pipeline execution so transactions are never idle
🔹Split block into shreds with deferred merklisation
🔹Stream shreds to nodes via p2p
🔹Users get fast confirmations AND incremental state updates

https://blog.riselabs.xyz/incremental-block-construction/</title>
        <dc:creator>@sam_battenally</dc:creator>
        <description><![CDATA[<p>Checkout our latest article on low latency real-time preconfirmations<br>
<br>
TDLR; <br>
🔹Pipeline execution so transactions are never idle<br>
🔹Split block into shreds with deferred merklisation<br>
🔹Stream shreds to nodes via p2p<br>
🔹Users get fast confirmations AND incremental state updates<br>
<br>
<a href="https://blog.riselabs.xyz/incremental-block-construction/">blog.riselabs.xyz/incrementa…</a></p>
<p><a href="https://nitter.freedit.eu/nvthnh/status/1889960339481219349#m">nitter.freedit.eu/nvthnh/status/1889960339481219349#m</a></p>
<img src="https://nitter.freedit.eu/pic/media%2FGjqXJ_pbwAAm_m4.jpg" style="max-width:250px;" />]]></description>
        <pubDate>Thu, 13 Feb 2025 10:45:49 GMT</pubDate>
        <guid>https://nitter.freedit.eu/sam_battenally/status/1889989348134986207#m</guid>
        <link>https://nitter.freedit.eu/sam_battenally/status/1889989348134986207#m</link>
      </item>
      <item>
        <title>RT by @hai_rise: 1/ In blockchain networks, particularly L2s, transaction confirmation speed and state synchronization are critical challenges that impact network performance and user experience.</title>
        <dc:creator>@nvthnh</dc:creator>
        <description><![CDATA[<p>1/ In blockchain networks, particularly L2s, transaction confirmation speed and state synchronization are critical challenges that impact network performance and user experience.</p>]]></description>
        <pubDate>Thu, 13 Feb 2025 08:50:33 GMT</pubDate>
        <guid>https://nitter.freedit.eu/nvthnh/status/1889960339481219349#m</guid>
        <link>https://nitter.freedit.eu/nvthnh/status/1889960339481219349#m</link>
      </item>
      <item>
        <title>RT by @hai_rise: Road to Gigagas!

Reth v1.2 is out, Pectra ready &amp; up to 50% gains in perf for L1 usage, 36M default gas limit!

This is a breakthrough release, starting the rollout of our new high perf consensus engine with previously inaccessible optimizations.

We have worked on this for many months and are very excited for this release today. We think this gets us one step closer to being in the best of both worlds: the compact archive node of the Erigon architecture, and the high performance at the tip of the TrieDB architecture without needing specialized databases!

More to come, including L2 support!</title>
        <dc:creator>@gakonst</dc:creator>
        <description><![CDATA[<p>Road to Gigagas!<br>
<br>
Reth v1.2 is out, Pectra ready & up to 50% gains in perf for L1 usage, 36M default gas limit!<br>
<br>
This is a breakthrough release, starting the rollout of our new high perf consensus engine with previously inaccessible optimizations.<br>
<br>
We have worked on this for many months and are very excited for this release today. We think this gets us one step closer to being in the best of both worlds: the compact archive node of the Erigon architecture, and the high performance at the tip of the TrieDB architecture without needing specialized databases!<br>
<br>
More to come, including L2 support!</p>
<img src="https://nitter.freedit.eu/pic/media%2FGjnlpXwaIAEI4lf.jpg" style="max-width:250px;" />]]></description>
        <pubDate>Wed, 12 Feb 2025 21:56:51 GMT</pubDate>
        <guid>https://nitter.freedit.eu/gakonst/status/1889795832234516835#m</guid>
        <link>https://nitter.freedit.eu/gakonst/status/1889795832234516835#m</link>
      </item>
      <item>
        <title>R to @hai_rise: The bugs we fixed:
- Missed the beacon root contract transitions when the chain reorgs within an L1 slot.
- Infinity loop when the chain reorgs over an L1 slot.
- Invalid state transitions due to wrong pre-execution (state cache) handling when the chain reorgs.
- Mishandling of no_tx_pool.</title>
        <dc:creator>@hai_rise</dc:creator>
        <description><![CDATA[<p>The bugs we fixed:<br>
- Missed the beacon root contract transitions when the chain reorgs within an L1 slot.<br>
- Infinity loop when the chain reorgs over an L1 slot.<br>
- Invalid state transitions due to wrong pre-execution (state cache) handling when the chain reorgs.<br>
- Mishandling of no_tx_pool.</p>]]></description>
        <pubDate>Thu, 06 Feb 2025 13:41:54 GMT</pubDate>
        <guid>https://nitter.freedit.eu/hai_rise/status/1887496945171898666#m</guid>
        <link>https://nitter.freedit.eu/hai_rise/status/1887496945171898666#m</link>
      </item>
      <item>
        <title>RT by @hai_rise: The RISE Testnet is coming fast, and it’s built for speed!

Now, we’re inviting builders to take RISE for a test drive with up to 100M $RISE in total prizes to be won.</title>
        <dc:creator>@rise_chain</dc:creator>
        <description><![CDATA[<p>The RISE Testnet is coming fast, and it’s built for speed!<br>
<br>
Now, we’re inviting builders to take RISE for a test drive with up to 100M <a href="https://nitter.freedit.eu/search?q=%23RISE">$RISE</a> in total prizes to be won.</p>
<img src="https://nitter.freedit.eu/pic/ext_tw_video_thumb%2F1887128430048636928%2Fpu%2Fimg%2FdFC0GzhxOdRnaOg7.jpg" style="max-width:250px;" />]]></description>
        <pubDate>Wed, 05 Feb 2025 13:21:41 GMT</pubDate>
        <guid>https://nitter.freedit.eu/rise_chain/status/1887129468302447081#m</guid>
        <link>https://nitter.freedit.eu/rise_chain/status/1887129468302447081#m</link>
      </item>
      <item>
        <title>RT by @hai_rise: some casual e2e latency benchmarks from the @rise_chain devs

latency is extremely undercooked on EVMs</title>
        <dc:creator>@sam_battenally</dc:creator>
        <description><![CDATA[<p>some casual e2e latency benchmarks from the <a href="https://nitter.freedit.eu/rise_chain" title="RISE Chain">@rise_chain</a> devs<br>
<br>
latency is extremely undercooked on EVMs</p>
<img src="https://nitter.freedit.eu/pic/media%2FGi79AyXa4AMIK4m.png" style="max-width:250px;" />]]></description>
        <pubDate>Tue, 04 Feb 2025 10:34:52 GMT</pubDate>
        <guid>https://nitter.freedit.eu/sam_battenally/status/1886725101766529204#m</guid>
        <link>https://nitter.freedit.eu/sam_battenally/status/1886725101766529204#m</link>
      </item>
      <item>
        <title>RT by @hai_rise: Milliseconds matter.
Milliseconds matter.</title>
        <dc:creator>@rise_chain</dc:creator>
        <description><![CDATA[<p>Milliseconds matter.<br>
Milliseconds matter.</p>
<img src="https://nitter.freedit.eu/pic/media%2FGiS51W_agAAh1ZQ.jpg" style="max-width:250px;" />]]></description>
        <pubDate>Mon, 27 Jan 2025 11:11:12 GMT</pubDate>
        <guid>https://nitter.freedit.eu/rise_chain/status/1883835144051818616#m</guid>
        <link>https://nitter.freedit.eu/rise_chain/status/1883835144051818616#m</link>
      </item>
      <item>
        <title>RT by @hai_rise: It&apos;s clear to me that @VitalikButerin has heard the feedback, he has shifted gears into wartime mode and istaking action

I just spent 2hrs on the EF preconfirmations call with top L2 and based infra teams all sharing their support for Native Based Rollups!

@drakefjustin presented a key message of inclusive for layer 2. Bottom line is Ethereum offers services to Layer 2s:
🔹DA (Blobs)
🔹Sequencing (Based)
🔹Native Execution

L2s can pick and choose what suits their usecase best, and all are welcome.

For example, @rise_chain will be a based &amp; native layer 2, however, we&apos;re using altDA!

This shift in gears comes with an opinionated stance on Based Sequencing, its potential for Layer 2s and as a service Ethereum can offer.

And he means business! (yes it was a call 3am for me)</title>
        <dc:creator>@sam_battenally</dc:creator>
        <description><![CDATA[<p>It's clear to me that <a href="https://nitter.freedit.eu/VitalikButerin" title="vitalik.eth">@VitalikButerin</a> has heard the feedback, he has shifted gears into wartime mode and istaking action<br>
<br>
I just spent 2hrs on the EF preconfirmations call with top L2 and based infra teams all sharing their support for Native Based Rollups!<br>
<br>
<a href="https://nitter.freedit.eu/drakefjustin" title="Justin.eth Drake">@drakefjustin</a> presented a key message of inclusive for layer 2. Bottom line is Ethereum offers services to Layer 2s:<br>
🔹DA (Blobs)<br>
🔹Sequencing (Based)<br>
🔹Native Execution<br>
<br>
L2s can pick and choose what suits their usecase best, and all are welcome.<br>
<br>
For example, <a href="https://nitter.freedit.eu/rise_chain" title="RISE Chain">@rise_chain</a> will be a based & native layer 2, however, we're using altDA!<br>
<br>
This shift in gears comes with an opinionated stance on Based Sequencing, its potential for Layer 2s and as a service Ethereum can offer.<br>
<br>
And he means business! (yes it was a call 3am for me)</p>
<img src="https://nitter.freedit.eu/pic/media%2FGiEtAFOaAAAL5Ws.png" style="max-width:250px;" />]]></description>
        <pubDate>Fri, 24 Jan 2025 17:05:08 GMT</pubDate>
        <guid>https://nitter.freedit.eu/sam_battenally/status/1882837046915641858#m</guid>
        <link>https://nitter.freedit.eu/sam_battenally/status/1882837046915641858#m</link>
      </item>
      <item>
        <title>RT by @hai_rise: ETHEREUM ACCELERATION .

With @matthuang, @danrobinson &amp; @_charlienoyes.</title>
        <dc:creator>@gakonst</dc:creator>
        <description><![CDATA[<p>ETHEREUM ACCELERATION .<br>
<br>
With <a href="https://nitter.freedit.eu/matthuang" title="Matt Huang">@matthuang</a>, <a href="https://nitter.freedit.eu/danrobinson" title="Dan Robinson">@danrobinson</a> &amp; <a href="https://nitter.freedit.eu/_charlienoyes" title="Charlie">@_charlienoyes</a>.</p>
<img src="https://nitter.freedit.eu/pic/media%2FGiJx54cbcAA7VeI.jpg" style="max-width:250px;" />]]></description>
        <pubDate>Sat, 25 Jan 2025 16:38:54 GMT</pubDate>
        <guid>https://nitter.freedit.eu/gakonst/status/1883192835874390276#m</guid>
        <link>https://nitter.freedit.eu/gakonst/status/1883192835874390276#m</link>
      </item>
      <item>
        <title>RT by @hai_rise: Introducing Quick Merkle Database (QMDB), a high-performance verifiable database optimized for blockchains.

• 2.28M state updates per second, 1M TPS (benchmarked transfers per second).

• Benchmarked with workloads up to 15B (10x Ethereum’s 2024 state) and proven capacity to scale to 280B entries on a single server.

• Single read per state access, O(1) I/O for updates, and in-memory Merkleization on a footprint as small as 2.3 bytes per entry.

• Efficiently scales across both consumer grade and enterprise hardware.

Developed by LayerZero Labs, QMDB is MIT and apache-2 licensed and completely open-source.</title>
        <dc:creator>@LayerZero_Core</dc:creator>
        <description><![CDATA[<p>Introducing Quick Merkle Database (QMDB), a high-performance verifiable database optimized for blockchains.<br>
<br>
• 2.28M state updates per second, 1M TPS (benchmarked transfers per second).<br>
<br>
• Benchmarked with workloads up to 15B (10x Ethereum’s 2024 state) and proven capacity to scale to 280B entries on a single server.<br>
<br>
• Single read per state access, O(1) I/O for updates, and in-memory Merkleization on a footprint as small as 2.3 bytes per entry.<br>
<br>
• Efficiently scales across both consumer grade and enterprise hardware.<br>
<br>
Developed by LayerZero Labs, QMDB is MIT and apache-2 licensed and completely open-source.</p>
<img src="https://nitter.freedit.eu/pic/media%2FGhQ95sOaUAAJr-G.jpg" style="max-width:250px;" />]]></description>
        <pubDate>Tue, 14 Jan 2025 15:56:24 GMT</pubDate>
        <guid>https://nitter.freedit.eu/LayerZero_Core/status/1879195871042310159#m</guid>
        <link>https://nitter.freedit.eu/LayerZero_Core/status/1879195871042310159#m</link>
      </item>
      <item>
        <title>After the latest Reth bump, we could 3~4x the throughput limit on 2 test loads without breaking the chain!

Best bump ever and cannot thank the Reth contributors enough (especially in the last month). 

Reth is getting more and more stable for high loads 🫡.</title>
        <dc:creator>@hai_rise</dc:creator>
        <description><![CDATA[<p>After the latest Reth bump, we could 3~4x the throughput limit on 2 test loads without breaking the chain!<br>
<br>
Best bump ever and cannot thank the Reth contributors enough (especially in the last month). <br>
<br>
Reth is getting more and more stable for high loads 🫡.</p>]]></description>
        <pubDate>Mon, 13 Jan 2025 12:45:57 GMT</pubDate>
        <guid>https://nitter.freedit.eu/hai_rise/status/1878785558220345556#m</guid>
        <link>https://nitter.freedit.eu/hai_rise/status/1878785558220345556#m</link>
      </item>
      <item>
        <title>This may or may not be @rise_chain&apos;s cultural question for tech candidates 🫣:

&quot;You&apos;re stuck with this tricky bug for 3 days without a clue. Which music plays in the background when you sacrifice a goat to Satan for an answer?&quot;</title>
        <dc:creator>@hai_rise</dc:creator>
        <description><![CDATA[<p>This may or may not be <a href="https://nitter.freedit.eu/rise_chain" title="RISE Chain">@rise_chain</a>'s cultural question for tech candidates 🫣:<br>
<br>
"You're stuck with this tricky bug for 3 days without a clue. Which music plays in the background when you sacrifice a goat to Satan for an answer?"</p>]]></description>
        <pubDate>Wed, 08 Jan 2025 14:20:26 GMT</pubDate>
        <guid>https://nitter.freedit.eu/hai_rise/status/1876997396397170702#m</guid>
        <link>https://nitter.freedit.eu/hai_rise/status/1876997396397170702#m</link>
      </item>
      <item>
        <title>At @rise_chain, each performance-sensitive change to the RISE Stack (as &quot;small&quot; as an OP Stack config tweak or a cargo update in the EL) must undergo 2+ hours of benchmarking to see effects on chain stability, throughput, and user latency under load.

While I enjoy our bare metals and the decentralising deployment talks at Devcon, cannot help but feel grateful for the credits @googlecloud gave us as we spun the 6th benchmarking instance...</title>
        <dc:creator>@hai_rise</dc:creator>
        <description><![CDATA[<p>At <a href="https://nitter.freedit.eu/rise_chain" title="RISE Chain">@rise_chain</a>, each performance-sensitive change to the RISE Stack (as "small" as an OP Stack config tweak or a cargo update in the EL) must undergo 2+ hours of benchmarking to see effects on chain stability, throughput, and user latency under load.<br>
<br>
While I enjoy our bare metals and the decentralising deployment talks at Devcon, cannot help but feel grateful for the credits <a href="https://nitter.freedit.eu/googlecloud" title="Google Cloud">@googlecloud</a> gave us as we spun the 6th benchmarking instance...</p>
<img src="https://nitter.freedit.eu/pic/media%2FGfppgDeaQAAOT8t.png" style="max-width:250px;" />]]></description>
        <pubDate>Wed, 25 Dec 2024 14:24:28 GMT</pubDate>
        <guid>https://nitter.freedit.eu/hai_rise/status/1871924979107090610#m</guid>
        <link>https://nitter.freedit.eu/hai_rise/status/1871924979107090610#m</link>
      </item>
      <item>
        <title>Excellent read for anyone operating an OP-based rollup. 

Key takeaways:
- Reth&apos;s good!
- Still, its solution to DB compactions &quot;sacrifices&quot; historical proof and root calculation speed. Versioned Merkle Trees like Jellyfish and specialized storages like LETUS remain much superior to MPT and MDBX.

- Full nodes forking onto their chain can happen easier than one may think. Operations are as important if not even more than core Systems works 🙂.</title>
        <dc:creator>@hai_rise</dc:creator>
        <description><![CDATA[<p>Excellent read for anyone operating an OP-based rollup. <br>
<br>
Key takeaways:<br>
- Reth's good!<br>
- Still, its solution to DB compactions "sacrifices" historical proof and root calculation speed. Versioned Merkle Trees like Jellyfish and specialized storages like LETUS remain much superior to MPT and MDBX.<br>
<br>
- Full nodes forking onto their chain can happen easier than one may think. Operations are as important if not even more than core Systems works 🙂.</p>
<p><a href="https://nitter.freedit.eu/jessepollak/status/1869795767654945030#m">nitter.freedit.eu/jessepollak/status/1869795767654945030#m</a></p>
<img src="https://nitter.freedit.eu/pic/media%2FGfNUhKiWwAAvL3X.jpg" style="max-width:250px;" />]]></description>
        <pubDate>Fri, 20 Dec 2024 02:30:56 GMT</pubDate>
        <guid>https://nitter.freedit.eu/hai_rise/status/1869933474662031366#m</guid>
        <link>https://nitter.freedit.eu/hai_rise/status/1869933474662031366#m</link>
      </item>
      <item>
        <title>RT by @hai_rise: Popular L2s still don’t scale.

L2s can’t handle Solana-level throughput even if they wanted to, let alone a few thousand TPS. Significant growth threatens to exhaust Ethereum’s data throughput indefinitely.

Building for Gigagas performance requires a different approach, so RISE is building with Celestia underneath. 🦣

Celestia plays a pivotal role in enabling RISE to achieve Gigagas throughput, which is over ONE HUNDRED TIMES more performance than popular Ethereum L2s like Base.

Blockchain performance, especially transaction processing speed, has long been severely undermined by three major bottlenecks: 

Data Availability, Execution, and State Access; leading to many failed attempts at launching truly scalable blockchains.

With Celestia, high performance Data Availability (DA) is now possible:

• 1.33 MB/s on public testnet (expected on Mainnet in January), enough to handle Gigagas chains while remaining permissionless

• Cheaper transactions, with DA costs as low as $0.00002 per transfer

• A roadmap to 1GB/s of data throughput, including through new cryptographic breakthroughs like ZODA (https://x.com/celestia/status/1864012479980024278)

• Proven reliability after a year in production and nearly 25 chains posting data to Celestia today

While Celestia removes the DA bottleneck, RISE tackles the Execution and State Access bottlenecks. Together, this makes RISE chain’s Gigagas performance a reality - bringing unstoppable, extreme performance to everyone.

No more slow transactions, network congestion and high fees - even at mass adoption.

This isn’t just incremental progress. RISE chain removes the final barriers to scale, at extreme scale, and will enable onchain applications to outcompete their centralized counterparts:

• DeFi with CEX-level speed and liquidity
• Fully on-chain apps supporting millions of real-time users
• On-chain AI networks that run without congestion

With Celestia’s DA and RISE’s Execution and State Access breakthroughs, the Gigagas Era is here: reliable, decentralized, and over 100x faster.

The future of unstoppable performance starts now.

Join The Gigagas Revolution today!

Learn more: https://riselabs.xyz
Join our community: https://discord.gg/risechain
Build the future: https://docs.riselabs.xyz/build-on-rise/builder-community.html</title>
        <dc:creator>@rise_chain</dc:creator>
        <description><![CDATA[<p>Popular L2s still don’t scale.<br>
<br>
L2s can’t handle Solana-level throughput even if they wanted to, let alone a few thousand TPS. Significant growth threatens to exhaust Ethereum’s data throughput indefinitely.<br>
<br>
Building for Gigagas performance requires a different approach, so RISE is building with Celestia underneath. 🦣<br>
<br>
Celestia plays a pivotal role in enabling RISE to achieve Gigagas throughput, which is over ONE HUNDRED TIMES more performance than popular Ethereum L2s like Base.<br>
<br>
Blockchain performance, especially transaction processing speed, has long been severely undermined by three major bottlenecks: <br>
<br>
Data Availability, Execution, and State Access; leading to many failed attempts at launching truly scalable blockchains.<br>
<br>
With Celestia, high performance Data Availability (DA) is now possible:<br>
<br>
• 1.33 MB/s on public testnet (expected on Mainnet in January), enough to handle Gigagas chains while remaining permissionless<br>
<br>
• Cheaper transactions, with DA costs as low as $0.00002 per transfer<br>
<br>
• A roadmap to 1GB/s of data throughput, including through new cryptographic breakthroughs like ZODA (<a href="https://x.com/celestia/status/1864012479980024278">x.com/celestia/status/186401…</a>)<br>
<br>
• Proven reliability after a year in production and nearly 25 chains posting data to Celestia today<br>
<br>
While Celestia removes the DA bottleneck, RISE tackles the Execution and State Access bottlenecks. Together, this makes RISE chain’s Gigagas performance a reality - bringing unstoppable, extreme performance to everyone.<br>
<br>
No more slow transactions, network congestion and high fees - even at mass adoption.<br>
<br>
This isn’t just incremental progress. RISE chain removes the final barriers to scale, at extreme scale, and will enable onchain applications to outcompete their centralized counterparts:<br>
<br>
• DeFi with CEX-level speed and liquidity<br>
• Fully on-chain apps supporting millions of real-time users<br>
• On-chain AI networks that run without congestion<br>
<br>
With Celestia’s DA and RISE’s Execution and State Access breakthroughs, the Gigagas Era is here: reliable, decentralized, and over 100x faster.<br>
<br>
The future of unstoppable performance starts now.<br>
<br>
Join The Gigagas Revolution today!<br>
<br>
Learn more: <a href="https://riselabs.xyz">riselabs.xyz</a><br>
Join our community: <a href="https://discord.gg/risechain">discord.gg/risechain</a><br>
Build the future: <a href="https://docs.riselabs.xyz/build-on-rise/builder-community.html">docs.riselabs.xyz/build-on-r…</a></p>
<img src="https://nitter.freedit.eu/pic/media%2FGe67BFObkAAjChw.jpg" style="max-width:250px;" />
<img src="https://nitter.freedit.eu/pic/media%2FGe67npUaUAAHylS.jpg" style="max-width:250px;" />]]></description>
        <pubDate>Mon, 16 Dec 2024 16:00:01 GMT</pubDate>
        <guid>https://nitter.freedit.eu/rise_chain/status/1868687536903585848#m</guid>
        <link>https://nitter.freedit.eu/rise_chain/status/1868687536903585848#m</link>
      </item>
      <item>
        <title>RT by @hai_rise: NEW EP: Why Based Rollups Are Ethereum&apos;s Best Bet with Sam Battenally

We are entering Ethereum&apos;s based era of scaling.

For today&apos;s pod, @ayyyeandy &amp; @robbie_rollup had @sam_battenally, CEO of @rise_chain on to discuss the current state of Ethereum, the significance of based rollups in scaling the network, high performance L2s, and the recent growth of Rise.

Full episode links below.

Timestamps:
00:55 Devcon Thailand Intro
03:27 Understanding Based Rollups
10:45 Based Rollups Network Effects
14:35 Sequencing Week Takeaways
21:09 What is Gigagas?
29:41 Parallel EVM Bull Thesis</title>
        <dc:creator>@therollupco</dc:creator>
        <description><![CDATA[<p>NEW EP: Why Based Rollups Are Ethereum's Best Bet with Sam Battenally<br>
<br>
We are entering Ethereum's based era of scaling.<br>
<br>
For today's pod, <a href="https://nitter.freedit.eu/ayyyeandy" title="Andy">@ayyyeandy</a> & <a href="https://nitter.freedit.eu/robbie_rollup" title="robbie">@robbie_rollup</a> had <a href="https://nitter.freedit.eu/sam_battenally" title="Sam Battenally 🍚⛓️">@sam_battenally</a>, CEO of <a href="https://nitter.freedit.eu/rise_chain" title="RISE Chain">@rise_chain</a> on to discuss the current state of Ethereum, the significance of based rollups in scaling the network, high performance L2s, and the recent growth of Rise.<br>
<br>
Full episode links below.<br>
<br>
Timestamps:<br>
00:55 Devcon Thailand Intro<br>
03:27 Understanding Based Rollups<br>
10:45 Based Rollups Network Effects<br>
14:35 Sequencing Week Takeaways<br>
21:09 What is Gigagas?<br>
29:41 Parallel EVM Bull Thesis</p>
<img src="https://nitter.freedit.eu/pic/amplify_video_thumb%2F1867201114732371968%2Fimg%2FZV18M3Rxd8xALcDN.jpg" style="max-width:250px;" />]]></description>
        <pubDate>Thu, 12 Dec 2024 14:02:44 GMT</pubDate>
        <guid>https://nitter.freedit.eu/therollupco/status/1867208468492329202#m</guid>
        <link>https://nitter.freedit.eu/therollupco/status/1867208468492329202#m</link>
      </item>
      <item>
        <title>Life&apos;s easier when you aggressively upstream shared code and use Reth as a library (instead of a fork) for the differences 🙂.</title>
        <dc:creator>@hai_rise</dc:creator>
        <description><![CDATA[<p>Life's easier when you aggressively upstream shared code and use Reth as a library (instead of a fork) for the differences 🙂.</p>
<p><a href="https://nitter.freedit.eu/DomantasPe/status/1866532183315263976#m">nitter.freedit.eu/DomantasPe/status/1866532183315263976#m</a></p>
<img src="https://nitter.freedit.eu/pic/media%2FGemxa-CWUAEyoFi.jpg" style="max-width:250px;" />]]></description>
        <pubDate>Thu, 12 Dec 2024 14:44:38 GMT</pubDate>
        <guid>https://nitter.freedit.eu/hai_rise/status/1867219012049883518#m</guid>
        <link>https://nitter.freedit.eu/hai_rise/status/1867219012049883518#m</link>
      </item>

  </channel>
</rss>
