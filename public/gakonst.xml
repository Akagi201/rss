<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <atom:link href="https://nitter.freedit.eu/gakonst/rss" rel="self" type="application/rss+xml" />
    <title>Georgios Konstantopoulos / @gakonst</title>
    <link>https://nitter.freedit.eu/gakonst</link>
    <description>Twitter feed for: @gakonst. Generated by nitter.freedit.eu
</description>
    <language>en-us</language>
    <ttl>40</ttl>
    <image>
      <title>Georgios Konstantopoulos / @gakonst</title>
      <link>https://nitter.freedit.eu/gakonst</link>
      <url>https://nitter.freedit.eu/pic/pbs.twimg.com%2Fprofile_images%2F1596214564470734849%2F1Tg5-gNh_400x400.jpg</url>
      <width>128</width>
      <height>128</height>
    </image>
      <item>
        <title>Are you running an ETH staking service?

Do you want to make Ethereum more robust by routing stake through a minority client? 

Reach out if you&apos;re interested in running Reth in your infrastructure.

Reth is stable, performant, and ready for staking!</title>
        <dc:creator>@gakonst</dc:creator>
        <description><![CDATA[<p>Are you running an ETH staking service?<br>
<br>
Do you want to make Ethereum more robust by routing stake through a minority client? <br>
<br>
Reach out if you're interested in running Reth in your infrastructure.<br>
<br>
Reth is stable, performant, and ready for staking!</p>]]></description>
        <pubDate>Sat, 18 Jan 2025 00:00:41 GMT</pubDate>
        <guid>https://nitter.freedit.eu/gakonst/status/1880404912011677750#m</guid>
        <link>https://nitter.freedit.eu/gakonst/status/1880404912011677750#m</link>
      </item>
      <item>
        <title>any telegram bot companies thinking about offering cheaper fees or buying into any chains asset from any chain with any asset, using account/chain abstraction? would love to talk!</title>
        <dc:creator>@gakonst</dc:creator>
        <description><![CDATA[<p>any telegram bot companies thinking about offering cheaper fees or buying into any chains asset from any chain with any asset, using account/chain abstraction? would love to talk!</p>]]></description>
        <pubDate>Fri, 17 Jan 2025 23:11:50 GMT</pubDate>
        <guid>https://nitter.freedit.eu/gakonst/status/1880392615230861570#m</guid>
        <link>https://nitter.freedit.eu/gakonst/status/1880392615230861570#m</link>
      </item>
      <item>
        <title>RT by @gakonst: Pectra-devnet-5 is finally live! This includes all the EIPs slated to go into Pectra in their almost-final forms.

You can find all network details here: 
https://pectra-devnet-5.ethpandaops.io/</title>
        <dc:creator>@parithosh_j</dc:creator>
        <description><![CDATA[<p>Pectra-devnet-5 is finally live! This includes all the EIPs slated to go into Pectra in their almost-final forms.<br>
<br>
You can find all network details here: <br>
<a href="https://pectra-devnet-5.ethpandaops.io/">pectra-devnet-5.ethpandaops.…</a></p>]]></description>
        <pubDate>Fri, 17 Jan 2025 16:37:03 GMT</pubDate>
        <guid>https://nitter.freedit.eu/parithosh_j/status/1880293267381842194#m</guid>
        <link>https://nitter.freedit.eu/parithosh_j/status/1880293267381842194#m</link>
      </item>
      <item>
        <title>RT by @gakonst: Looking for a Rust engineer to work on Farcaster Snapchain. 

It&apos;s a new social consensus layer built with malachite, a tendermint consensus protocol. Goal is &gt;9,000 TPS for social transactions. 

US timezones only, details below.</title>
        <dc:creator>@varunsrin</dc:creator>
        <description><![CDATA[<p>Looking for a Rust engineer to work on Farcaster Snapchain. <br>
<br>
It's a new social consensus layer built with malachite, a tendermint consensus protocol. Goal is &gt;9,000 TPS for social transactions. <br>
<br>
US timezones only, details below.</p>
<img src="https://nitter.freedit.eu/pic/media%2FGhgjQY5acAMdtvd.jpg" style="max-width:250px;" />]]></description>
        <pubDate>Fri, 17 Jan 2025 16:33:02 GMT</pubDate>
        <guid>https://nitter.freedit.eu/varunsrin/status/1880292255829033371#m</guid>
        <link>https://nitter.freedit.eu/varunsrin/status/1880292255829033371#m</link>
      </item>
      <item>
        <title>R to @gakonst: I understand a malicious app could just upgrade your account to anything. You can work with the apps to register the delegation contracts they want. Alternatively let the app suggest an address the first time the user wants to upgrade, assuming the app is honest the first time. Seems fine as an assumption.</title>
        <dc:creator>@gakonst</dc:creator>
        <description><![CDATA[<p>I understand a malicious app could just upgrade your account to anything. You can work with the apps to register the delegation contracts they want. Alternatively let the app suggest an address the first time the user wants to upgrade, assuming the app is honest the first time. Seems fine as an assumption.</p>]]></description>
        <pubDate>Thu, 16 Jan 2025 20:34:11 GMT</pubDate>
        <guid>https://nitter.freedit.eu/gakonst/status/1879990554425241968#m</guid>
        <link>https://nitter.freedit.eu/gakonst/status/1879990554425241968#m</link>
      </item>
      <item>
        <title>R to @gakonst: The default path rn is wallets pick a single delegation contract they like for their users, in the name of security. 

Can they encapsulate the functionality apps need? Why not empower the apps?</title>
        <dc:creator>@gakonst</dc:creator>
        <description><![CDATA[<p>The default path rn is wallets pick a single delegation contract they like for their users, in the name of security. <br>
<br>
Can they encapsulate the functionality apps need? Why not empower the apps?</p>]]></description>
        <pubDate>Thu, 16 Jan 2025 20:34:11 GMT</pubDate>
        <guid>https://nitter.freedit.eu/gakonst/status/1879990552885944403#m</guid>
        <link>https://nitter.freedit.eu/gakonst/status/1879990552885944403#m</link>
      </item>
      <item>
        <title>My most unpopular opinion is that Metamask and other wallets should allow apps to choose their own EIP7702 delegation contract.

Empower the apps to give the best UX to their users. Chrome Extensions shouldn&apos;t be the intermediary to users&apos; accounts.</title>
        <dc:creator>@gakonst</dc:creator>
        <description><![CDATA[<p>My most unpopular opinion is that Metamask and other wallets should allow apps to choose their own EIP7702 delegation contract.<br>
<br>
Empower the apps to give the best UX to their users. Chrome Extensions shouldn't be the intermediary to users' accounts.</p>]]></description>
        <pubDate>Thu, 16 Jan 2025 20:25:18 GMT</pubDate>
        <guid>https://nitter.freedit.eu/gakonst/status/1879988318227820631#m</guid>
        <link>https://nitter.freedit.eu/gakonst/status/1879988318227820631#m</link>
      </item>
      <item>
        <title>RT by @gakonst: it&apos;s really fucked up that contributor charts are adjusted by the top contributor, you can&apos;t compete with this man</title>
        <dc:creator>@ashekhirin</dc:creator>
        <description><![CDATA[<p>it's really fucked up that contributor charts are adjusted by the top contributor, you can't compete with this man</p>
<img src="https://nitter.freedit.eu/pic/media%2FGhb8hmOWMAAGzOn.jpg" style="max-width:250px;" />]]></description>
        <pubDate>Thu, 16 Jan 2025 19:03:02 GMT</pubDate>
        <guid>https://nitter.freedit.eu/ashekhirin/status/1879967614916858007#m</guid>
        <link>https://nitter.freedit.eu/ashekhirin/status/1879967614916858007#m</link>
      </item>
      <item>
        <title>RT by @gakonst: Excited to announce our partnership with @RISCZero to integrate Binius, bringing ultra-fast performance to the original RISC-V zkVM.

Together, we&apos;re setting new standards for ZK performance and accessibility.

https://www.irreducible.com/posts/irreducible-x-risc-zero</title>
        <dc:creator>@IrreducibleHW</dc:creator>
        <description><![CDATA[<p>Excited to announce our partnership with <a href="https://nitter.freedit.eu/RiscZero" title="RISC Zero 🟡">@RISCZero</a> to integrate Binius, bringing ultra-fast performance to the original RISC-V zkVM.<br>
<br>
Together, we're setting new standards for ZK performance and accessibility.<br>
<br>
<a href="https://www.irreducible.com/posts/irreducible-x-risc-zero">irreducible.com/posts/irredu…</a></p>
<img src="https://nitter.freedit.eu/pic/card_img%2F1879892047491907584%2FmCXm9GXH%3Fformat%3Dpng%26name%3D800x419" style="max-width:250px;" />]]></description>
        <pubDate>Thu, 16 Jan 2025 14:06:10 GMT</pubDate>
        <guid>https://nitter.freedit.eu/IrreducibleHW/status/1879892909388144906#m</guid>
        <link>https://nitter.freedit.eu/IrreducibleHW/status/1879892909388144906#m</link>
      </item>
      <item>
        <title>RT by @gakonst: Reth ExEx project idea: index all state changes (accounts, storages), hash addresses and storage slots, write them to an SQLite database (for simplicity)

@ithacaxyz will host it on one of our production machines and expose a simple API for querying</title>
        <dc:creator>@ashekhirin</dc:creator>
        <description><![CDATA[<p>Reth ExEx project idea: index all state changes (accounts, storages), hash addresses and storage slots, write them to an SQLite database (for simplicity)<br>
<br>
<a href="https://nitter.freedit.eu/ithacaxyz" title="Ithaca">@ithacaxyz</a> will host it on one of our production machines and expose a simple API for querying</p>
<p><a href="https://nitter.freedit.eu/ashekhirin/status/1879590142455013538#m">nitter.freedit.eu/ashekhirin/status/1879590142455013538#m</a></p>]]></description>
        <pubDate>Thu, 16 Jan 2025 19:21:31 GMT</pubDate>
        <guid>https://nitter.freedit.eu/ashekhirin/status/1879972268241219902#m</guid>
        <link>https://nitter.freedit.eu/ashekhirin/status/1879972268241219902#m</link>
      </item>
      <item>
        <title>RT by @gakonst: Reminder: if you recently updated Foundry and your build starts breaking with stack too deep set `optimizer = true` in your foundry.toml

We’ve recently stopped enabling the optimizer by default and now require you to enable it explicitly

https://github.com/foundry-rs/foundry/issues/2486</title>
        <dc:creator>@zerosnacks</dc:creator>
        <description><![CDATA[<p>Reminder: if you recently updated Foundry and your build starts breaking with stack too deep set `optimizer = true` in your foundry.toml<br>
<br>
We’ve recently stopped enabling the optimizer by default and now require you to enable it explicitly<br>
<br>
<a href="https://github.com/foundry-rs/foundry/issues/2486">github.com/foundry-rs/foundr…</a></p>
<img src="https://nitter.freedit.eu/pic/card_img%2F1878346224199176192%2FxmUa_nBn%3Fformat%3Djpg%26name%3D800x419" style="max-width:250px;" />]]></description>
        <pubDate>Sun, 12 Jan 2025 07:42:08 GMT</pubDate>
        <guid>https://nitter.freedit.eu/zerosnacks/status/1878346710079971675#m</guid>
        <link>https://nitter.freedit.eu/zerosnacks/status/1878346710079971675#m</link>
      </item>
      <item>
        <title>RT by @gakonst: most browser extension wallets handle your PK - better trust the wallet.
setting up your hw wallet - better trust the wallet.
making sure SCA wallets have a secure contract implementation - better trust the wallet.
etc etc etc.

why can’t we trust it with not persisting a private key?</title>
        <dc:creator>@_jxom</dc:creator>
        <description><![CDATA[<p>most browser extension wallets handle your PK - better trust the wallet.<br>
setting up your hw wallet - better trust the wallet.<br>
making sure SCA wallets have a secure contract implementation - better trust the wallet.<br>
etc etc etc.<br>
<br>
why can’t we trust it with not persisting a private key?</p>]]></description>
        <pubDate>Wed, 15 Jan 2025 20:23:13 GMT</pubDate>
        <guid>https://nitter.freedit.eu/_jxom/status/1879625406724321467#m</guid>
        <link>https://nitter.freedit.eu/_jxom/status/1879625406724321467#m</link>
      </item>
      <item>
        <title>RT by @gakonst: - On 1 &amp; 2: valid concern if user wants multisig/strict execution guards - but this could be solved by deactivating the private key (EIP-7851)
- On 2: usually the wallet would perform the delegation, so I would trust the wallet to “throw away” the private key (if that’s the intention) if we are trusting them with everything else
- On 3: I’m not quite following the advantage of create2 addresses for EOAs since you can already determine a users address before delegation (just not via create2)
- On 4: probably won’t be possible for apps to delegate since no wallets expose eth_sign nor is there any RPC method to 7702 sign (highly doubt there will be too as it’s analogous to programmatically exporting your PK). Generally wallets will orchestrate the delegation behind the scenes, and pretty much all wallets have very good security practices (inc. audited account contracts). If we are already trusting wallets with our private key, then I’m sure we can trust them with upgrading our accounts appropriately.

Seems that most of the concern here is the risk of persisting the private key, and it would be great to push on EIP-7851 to mitigate this.</title>
        <dc:creator>@_jxom</dc:creator>
        <description><![CDATA[<p>- On 1 & 2: valid concern if user wants multisig/strict execution guards - but this could be solved by deactivating the private key (EIP-7851)<br>
- On 2: usually the wallet would perform the delegation, so I would trust the wallet to “throw away” the private key (if that’s the intention) if we are trusting them with everything else<br>
- On 3: I’m not quite following the advantage of create2 addresses for EOAs since you can already determine a users address before delegation (just not via create2)<br>
- On 4: probably won’t be possible for apps to delegate since no wallets expose eth_sign nor is there any RPC method to 7702 sign (highly doubt there will be too as it’s analogous to programmatically exporting your PK). Generally wallets will orchestrate the delegation behind the scenes, and pretty much all wallets have very good security practices (inc. audited account contracts). If we are already trusting wallets with our private key, then I’m sure we can trust them with upgrading our accounts appropriately.<br>
<br>
Seems that most of the concern here is the risk of persisting the private key, and it would be great to push on EIP-7851 to mitigate this.</p>]]></description>
        <pubDate>Wed, 15 Jan 2025 09:04:36 GMT</pubDate>
        <guid>https://nitter.freedit.eu/_jxom/status/1879454626086609032#m</guid>
        <link>https://nitter.freedit.eu/_jxom/status/1879454626086609032#m</link>
      </item>
      <item>
        <title>RT by @gakonst: 🤖 New EIP: XXXX

By: 
- Charlie Noyes
 -Dan Robinson
 -Justin Drake
 -Toni Wahrstätter

🔗 https://github.com/ethereum/EIPs/pull/9241

This EIP proposes delaying the ExecutionPayload&apos;s state root reference by one block, so that for each block `n`, the `state_root` in block `n`&apos;s `ExecutionPayload` references the post-state of block `n-1`. This change aims to remove the expensive state root computation from the block-propagation critical path, reducing end-to-end latency for block production and potentially increasing throughput. It simplifies the block production pipeline, accelerates real-time ZK proving, and is a consensus-breaking change requiring a coordinated hard fork.</title>
        <dc:creator>@ethresearchbot</dc:creator>
        <description><![CDATA[<p>🤖 New EIP: XXXX<br>
<br>
By: <br>
- Charlie Noyes<br>
 -Dan Robinson<br>
 -Justin Drake<br>
 -Toni Wahrstätter<br>
<br>
🔗 <a href="https://github.com/ethereum/EIPs/pull/9241">github.com/ethereum/EIPs/pul…</a><br>
<br>
This EIP proposes delaying the ExecutionPayload's state root reference by one block, so that for each block `n`, the `state_root` in block `n`'s `ExecutionPayload` references the post-state of block `n-1`. This change aims to remove the expensive state root computation from the block-propagation critical path, reducing end-to-end latency for block production and potentially increasing throughput. It simplifies the block production pipeline, accelerates real-time ZK proving, and is a consensus-breaking change requiring a coordinated hard fork.</p>
<img src="https://nitter.freedit.eu/pic/card_img%2F1879330372225204224%2Fd892LX-X%3Fformat%3Djpg%26name%3D800x419" style="max-width:250px;" />]]></description>
        <pubDate>Wed, 15 Jan 2025 00:51:54 GMT</pubDate>
        <guid>https://nitter.freedit.eu/ethresearchbot/status/1879330635745292579#m</guid>
        <link>https://nitter.freedit.eu/ethresearchbot/status/1879330635745292579#m</link>
      </item>
      <item>
        <title>this is also what we used to call WoW players that were bad</title>
        <dc:creator>@gakonst</dc:creator>
        <description><![CDATA[<p>this is also what we used to call WoW players that were bad</p>
<p><a href="https://nitter.freedit.eu/tolly_xyz/status/1879001196616355862#m">nitter.freedit.eu/tolly_xyz/status/1879001196616355862#m</a></p>]]></description>
        <pubDate>Wed, 15 Jan 2025 03:42:01 GMT</pubDate>
        <guid>https://nitter.freedit.eu/gakonst/status/1879373447815741472#m</guid>
        <link>https://nitter.freedit.eu/gakonst/status/1879373447815741472#m</link>
      </item>
      <item>
        <title>RT by @gakonst: as part of this change, I’ll no longer be the team lead at ARG; @kevaundray is the new team lead, bringing his deep expertise to help ethereum grow.

watch for the spectacular work coming from this group in 2025 — it’s going to be a big year as we scale the world computer.</title>
        <dc:creator>@ralexstokes</dc:creator>
        <description><![CDATA[<p>as part of this change, I’ll no longer be the team lead at ARG; <a href="https://nitter.freedit.eu/kevaundray" title="Kev">@kevaundray</a> is the new team lead, bringing his deep expertise to help ethereum grow.<br>
<br>
watch for the spectacular work coming from this group in 2025 — it’s going to be a big year as we scale the world computer.</p>]]></description>
        <pubDate>Tue, 14 Jan 2025 17:12:15 GMT</pubDate>
        <guid>https://nitter.freedit.eu/ralexstokes/status/1879214961207148953#m</guid>
        <link>https://nitter.freedit.eu/ralexstokes/status/1879214961207148953#m</link>
      </item>
      <item>
        <title>RT by @gakonst: I’ll be stepping up as a co-lead with @barnabemonnot  for research at the @ethereumfndn. Researchers at the EF are some of the most inspiring and passionate colleagues I’ve found in life and I could not be more excited to support our work both inside and outside the EF.</title>
        <dc:creator>@ralexstokes</dc:creator>
        <description><![CDATA[<p>I’ll be stepping up as a co-lead with <a href="https://nitter.freedit.eu/barnabemonnot" title="barnabe.eth">@barnabemonnot</a>  for research at the <a href="https://nitter.freedit.eu/ethereumfndn" title="Ethereum Foundation">@ethereumfndn</a>. Researchers at the EF are some of the most inspiring and passionate colleagues I’ve found in life and I could not be more excited to support our work both inside and outside the EF.</p>]]></description>
        <pubDate>Tue, 14 Jan 2025 17:12:14 GMT</pubDate>
        <guid>https://nitter.freedit.eu/ralexstokes/status/1879214957268742266#m</guid>
        <link>https://nitter.freedit.eu/ralexstokes/status/1879214957268742266#m</link>
      </item>
      <item>
        <title>RT by @gakonst: hello world computer</title>
        <dc:creator>@ethereum</dc:creator>
        <description><![CDATA[<p>hello world computer</p>]]></description>
        <pubDate>Mon, 13 Jan 2025 13:07:35 GMT</pubDate>
        <guid>https://nitter.freedit.eu/ethereum/status/1878791000732393665#m</guid>
        <link>https://nitter.freedit.eu/ethereum/status/1878791000732393665#m</link>
      </item>
      <item>
        <title>RT by @gakonst: just found out that foundry stack trace now contains storage changes 👀🤩

Very cool! Keep on shipping 🚀</title>
        <dc:creator>@merkleplant_eth</dc:creator>
        <description><![CDATA[<p>just found out that foundry stack trace now contains storage changes 👀🤩<br>
<br>
Very cool! Keep on shipping 🚀</p>
<img src="https://nitter.freedit.eu/pic/media%2FGhLM2G7X0AAipMw.jpg" style="max-width:250px;" />]]></description>
        <pubDate>Mon, 13 Jan 2025 13:00:48 GMT</pubDate>
        <guid>https://nitter.freedit.eu/merkleplant_eth/status/1878789293856235883#m</guid>
        <link>https://nitter.freedit.eu/merkleplant_eth/status/1878789293856235883#m</link>
      </item>
      <item>
        <title>RT by @gakonst: After the latest Reth bump, we could 3~4x the throughput limit on 2 test loads without breaking the chain!

Best bump ever and cannot thank the Reth contributors enough (especially in the last month). 

Reth is getting more and more stable for high loads 🫡.</title>
        <dc:creator>@hai_rise</dc:creator>
        <description><![CDATA[<p>After the latest Reth bump, we could 3~4x the throughput limit on 2 test loads without breaking the chain!<br>
<br>
Best bump ever and cannot thank the Reth contributors enough (especially in the last month). <br>
<br>
Reth is getting more and more stable for high loads 🫡.</p>]]></description>
        <pubDate>Mon, 13 Jan 2025 12:45:57 GMT</pubDate>
        <guid>https://nitter.freedit.eu/hai_rise/status/1878785558220345556#m</guid>
        <link>https://nitter.freedit.eu/hai_rise/status/1878785558220345556#m</link>
      </item>

  </channel>
</rss>
